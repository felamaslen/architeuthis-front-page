import dns from 'dns';
import type { IncomingMessage } from 'http';
import type { NextPage, NextPageContext } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { ContainerOuter, Header, Nav } from '../components';
import { logger } from '../shared/logger';

type Props = {
    clientHostname: string;
};

const Home: NextPage<Props> = ({ clientHostname }) => (
    <>
        <Head>
            <title>{process.env.NEXT_PUBLIC_TITLE}</title>
        </Head>
        <ContainerOuter>
            <Nav />
            <Header clientHostname={clientHostname} />
        </ContainerOuter>
    </>
);

async function getClientHostname(req: IncomingMessage | undefined): Promise<string> {
    const clientIps = req?.headers['x-real-ip'] ?? req?.socket.remoteAddress;
    const clientIp = Array.isArray(clientIps) ? clientIps[0] : clientIps;

    if (!clientIp) {
        return '<unknown>';
    }

    return new Promise<string>((resolve) => {
        dns.reverse(clientIp, (err, hostnames) => {
            if (err) {
                logger.warn('DNS reverse lookup failed for %s', clientIp);
                logger.verbose('DNS error: %s', err.message);
                resolve(clientIp);
            } else {
                resolve(hostnames[0] ?? clientIp);
            }
        });
    });
}

export async function getServerSideProps(ctx: NextPageContext): Promise<{ props: Props }> {
    const clientHostname = await getClientHostname(ctx.req);
    return { props: { clientHostname } };
}

export default Home;

/*{
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
 */
